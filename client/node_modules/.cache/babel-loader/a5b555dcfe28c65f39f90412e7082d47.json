{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\filon\\\\Desktop\\\\WebDev\\\\backend\\\\mern-stack\\\\client\\\\src\\\\components\\\\FileUploader.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = Yup.object().shape({\n  file: Yup.mixed().required(\"Please, choose file!\")\n});\n\nconst FileUploader = ({\n  className\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: className,\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"File Uploader\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Here you can enter upload file and get its info.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      file: null\n    },\n    onSubmit: values => {\n      console.log(\"Sending API request..\");\n    },\n    validationSchema: schema,\n    children: ({\n      handleSubmit,\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"file\",\n        name: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\n\n_c = FileUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"sources":["C:/Users/filon/Desktop/WebDev/backend/mern-stack/client/src/components/FileUploader.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","schema","object","shape","file","mixed","required","FileUploader","className","values","console","log","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,KAAJ,GAAYC,QAAZ,CAAqB,sBAArB;AAD0B,CAAnB,CAAf;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACnB;AAAK,EAAA,SAAS,EAAEA,SAAhB;AAAA,0BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KADjB;AAEE,IAAA,QAAQ,EAAGK,MAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,KAJH;AAKE,IAAA,gBAAgB,EAAEV,MALpB;AAAA,cAOG,CAAC;AAAEW,MAAAA,YAAF;AAAgBH,MAAAA;AAAhB,KAAD,kBACC,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAML,Y","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst schema = Yup.object().shape({\r\n  file: Yup.mixed().required(\"Please, choose file!\")\r\n});\r\n\r\nconst FileUploader = ({ className }) => (\r\n  <div className={className}>\r\n  <h2>File Uploader</h2>\r\n  <p>Here you can enter upload file and get its info.</p>\r\n    <Formik\r\n      initialValues={{ file: null }}\r\n      onSubmit={(values) => {\r\n        console.log(\"Sending API request..\")\r\n      }}\r\n      validationSchema={schema}\r\n    >\r\n      {({ handleSubmit, values}) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Field type=\"file\" name=\"file\"/>\r\n          <ErrorMessage name=\"file\"/>\r\n          <button type=\"submit\">Get info</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}